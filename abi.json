/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface IERC20  {
    function name() external view returns (string memory);

    function symbol() external view returns (string memory);

    function decimals() external view returns (uint8);

    function totalSupply() external view returns (uint256);

    function balanceOf(address owner) external view returns (uint256);

    function transfer(address to, uint256 value) external;

    function allowance(address owner, address spender) external view returns (uint256);

    function approve(address spender, uint256 value) external;

    function transferFrom(address from, address to, uint256 value) external;

    function mint(address to, uint256 value) external;

    function burn(uint256 value) external;

    error ERC20InsufficientBalance(address, uint256, uint256);

    error ERC20InvalidSender(address);

    error ERC20InvalidReciver(address);

    error ERC20InsufficientAllowance(address, uint256, uint256);
}
